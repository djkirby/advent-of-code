function hasSeat(y, x) {
  return x >= 1 && x <= NF && y >= 1 && y <= NR;
}

function adjacentOccupied(y, x, dy, dx) {
  y += dy;
  x += dx;
  if (occupied[y, x])
    return 1;
  if (!hasSeat(y, x) || !floor[y, x])
    return 0;
  return adjacentOccupied(y, x, dy, dx);
}

BEGIN { FS = "" }
{ 
  for (x = 1; x <= NF; x++) {
    occupied[NR, x] = $x == "L"; 
    floor[NR, x] = $x == ".";
  }
} 
END {
  while (1) {
    total = 0;
    changed = 0;
    for (y = 1; y <= NR; y++) {
      for (x = 1; x <= NF; x++) {
        if (floor[y,x]) 
          continue;
        copy[y, x] = occupied[y, x];
        adjacent = 0;
        for (k = -1; k <= 1; k++) 
          for (j = -1; j <= 1; j++) {
            if (j == 0 && k == 0)
              continue;
            adjacent += adjacentOccupied(y, x, k, j);
          }
        if (occupied[y, x] && adjacent > 4) 
          copy[y, x] = 0;
        else if (!occupied[y, x] && !adjacent) 
         copy[y, x] = 1;
      }
    }
    for (y = 1; y <= NR; y++) {
      for (x = 1; x <= NF; x++) {
        if (occupied[y,x] != copy[y,x])
          changed=1;
        occupied[y,x] = copy[y,x];
       if (occupied[y,x]) 
         total++;
      }
    }
    if (!changed) {
      print total;
      break;
    }
  }
}